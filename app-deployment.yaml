apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  selector:
    matchLabels:
      io.kompose.service: app
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: app
    spec:
      containers:
      - name: app
        image: naing2victor/app:2.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: pvc
          mountPath: /var/www/
        - name: pvc
          mountPath: /usr/local/etc/php/conf.d/local.ini
        env:
        - name: APP_DEBUG
          valueFrom:
            configMapKeyRef:
              key: APP_DEBUG
              name: app-env
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              key: APP_ENV
              name: app-env
        - name: APP_KEY
          valueFrom:
            configMapKeyRef:
              key: APP_KEY
              name: app-env
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              key: APP_NAME
              name: app-env
        - name: DB_CONNECTION
          valueFrom:
            configMapKeyRef:
              key: DB_CONNECTION
              name: app-env
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              key: DB_DATABASE
              name: app-env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: app-env
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DB_PASSWORD
              name: app-env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: app-env
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DB_USERNAME
              name: app-env
        workingDir: /var/www/
        resources: {}
        tty: true
      - name: webserver
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        workingDir: /var/www/
        resources: {}
        tty: true
      restartPolicy: Always
      volumes:
      - name: pvc
        persistentVolumeClaim:
          claimName: pvc
status: {}
